x[ , 'Rank']
x <- filter(x, Income.Group == 'Lower middle income')
table(x[ , 'Rank'])
cut( data[ ,'Rank'] , breaks=quantile(data[ ,'Rank'], c(0.2, 0.4, 0.6, 0.8)) )
cut( data[ ,'Rank'] , breaks=quantile(data[ ,'Rank'], c(O, 0.2, 0.4, 0.6, 0.8, 1)) )
cut( data[ ,'Rank'] , breaks=quantile(data[ ,'Rank'], probs = seq (O, 1, 0.2)) )
cut( data[ ,'Rank'] , breaks=quantile(data[ ,'Rank'], probs = seq (0, 1, 0.2) ) )
x <- data
x[ , 'Rank'] <- cut( data[ ,'Rank'] , breaks=quantile(data[ ,'Rank'], probs = seq (0, 1, 0.2) ) )
x <- filter(x, Income.Group == 'Lower middle income')
table(x[ , 'Rank'])
dbSendQuery(conn, 'DELETE TABLE data_1, data_2 ;')
dbSendQuery(conn, 'DELETE TABLE (data_1, data_2) ;')
dbDisconnect(conn)
rm(list = ls())
dir.create(quizz4)
dir.create('quizz4')
download.file( url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', destfile = './quizz4/01.csv')
data <- read.csv( './quizz4/001.csv', sep=',')
data <- read.csv( './quizz4/01.csv', sep=',')
names((data))
strsplit()
x <- strsplit(names(data))
x <- strsplit(names(data), 'wgtp')
x[123]
rm(list = ls())
download.file( url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', destfile = './quizz4/002.csv') ; read.csv( './quizz4/002.csv', sep=',')
data <- read.csv( './quizz4/002.csv', sep=',')
View(data)
data <- data[ 5:330 , ]
library(dplyr)
data <- rename( CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- rename(data,  CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- select(data, c(1, 2, 4, 5)
View(data)
data <- select(data, c(1, 2, 4, 5))
data <- rename( Rank = 2)
data <- rename(data, Rank = 2)
data <- rename(data, Rank = '2')
names(data)
data <- rename(data, Rank = 'Gross.domestic.product.2012" "Country')
data <- rename(data, Rank = 'Gross.domestic.product.2012')
tail(data)
data <- filter(data, Worth != '')
class(data['Worth'])
data[ ,'Worth'] <- as.numeric(data[ ,'Worth'])
data <- read.csv( './quizz4/002.csv', sep=',')
data <- data[ 5:330 , ]
data <- rename( CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- rename(data,  CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- select(data, c(1, 2, 4, 5))
data <- rename(data, Rank = 'Gross.domestic.product.2012')
data <- filter(data, Worth != '')
x <- strsplit(data['Worth'], '\,')
x <- strsplit(data['Worth'], ",")
x <- strsplit(data['Worth'], "\,")
x <- gsub(data['Worth'], '')
x <- gsub(",", "" , data['Worth'])
xtail
tail(x)
x <- gsub(",", "" , data[,'Worth'])
data[,'Worth'] <- gsub(",", "" , data[,'Worth'])
data[,'Worth'] <- as.numeric(data[,'Worth'])
mean(data[,'Worth'], na.rm = TRUE)
filter(data, 'Worth' != 'NA')
filter(data, 'Worth' != 'is.na')
filter(data, 'Worth' != '')
filter(data, 'Worth' != 'is.na()')
filter(data, 'Worth' != 'NA')
filter(data, 'Worth' != is.na())
filter(data, 'Worth' != is.na('Worth'))
filter(data, 'Worth' != is.na('data$Worth'))
filter(data, is.na('Worth'))
filter(data, !is.na('Worth'))
filter(data, 'Worth' = !is.na('Worth'))
subset(data, 'Worth' != NA)
subset(data, 'Worth' != 'NA')
subset(data, 'Worth' != 'is.na')
subset(data, 'Worth' != 'a')
subset(data, !'Worth' %in% 'a')
subset(data, !Worth %in% 'a')
subset(data, Worth != 'a')
filter(data, Worth != 'a')
data <- filter(data, Worth != 'a')
mean(data[,'Worth'])
data <- read.csv( './quizz4/002.csv', sep=',')
data <- data[ 5:330 , ]
data <- rename(data,  CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- rename(data, Rank = 'Gross.domestic.product.2012')
data <- select(data, c(1, 2, 4, 5))
data[,'Worth'] <- gsub(",", "" , data[,'Worth'])
data[,'Worth'] <- as.numeric(data[,'Worth'])
mean(data[,'Worth'])
library(dplyr)
data <- read.csv( './quizz4/002.csv', sep=',')
data <- data[ 5:330 , ]
data <- rename(data,  CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- rename(data, Rank = 'Gross.domestic.product.2012')
data <- select(data, c(1, 2, 4, 5))
data[,'Worth'] <- gsub(",", "" , data[,'Worth'])
data[,'Worth'] <- as.numeric(data[,'Worth'])
mean(data[,'Worth'])
data <- filter(data, Worth != 'a')
mean(data[,'Worth'])
data <- read.csv( './quizz4/002.csv', sep=',')
data <- data[ 5:330 , ]
data <- rename(data,  CountryCode = 'X', Country = 'X.2', Worth = 'X.3')
data <- rename(data, Rank = 'Gross.domestic.product.2012')
data <- select(data, c(1, 2, 4, 5))
data <- filter(data, Rank != '')
data[,'Worth'] <- gsub(",", "" , data[,'Worth'])
data[,'Worth'] <- as.numeric(data[,'Worth'])
data <- filter(data, Worth != 'a')
mean(data[,'Worth'])
grep(('^United',data['Country']))
grep('^United',data['Country'])
class(data['Country'])
data[ ,'Country'] <- as.character(data[ ,'Country'])
grep('^United',data[ ,'Country'])
sum('^United',data[ ,'Country'])
download.file( url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', destfile = './quizz4/004A.csv') ; download.file( url = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', destfile = './quizz4/004B.csv')
data_1 <- read.csv( './quizz4/004A.csv', sep=',') ; data_2 <- read.csv( './quizz4/004B.csv', sep=',')
View(data_1)
View(data_2)
data_1 <- data_1[ 5:330, c(1,2,4,5)]
library(dplyr)
data_1 <- data_1[ , 2 !='' ]
data_1 <- filter(data_1, 2 !='' )
data_1
data_1 <- read.csv( './quizz4/004A.csv', sep=',') ; data_2 <- read.csv( './quizz4/004B.csv', sep=',')
View(data_1)
View(data_2)
data_1 <- data_1[ 5:330, c(1,2,4,5)]
library(dplyr)
names(data_1)
data_1 <- rename(data_1, CountryCode = 'X', Rank = 'Gross.domestic.product.2012', Country = 'X.2', Worth = 'X.3')
data_1 <- filter( data_1, Rank != '')
data_1 <- filter( data_1, CountryCode != '')
data <- merge(data_1, data_2, by = CountryCode)
data <- merge(data_1, data_2, by = 'CountryCode')
data <- merge(data_1, data_2, by = 'CountryCode', all = TRUE)
View(data)
names(data)
data[ , 'Special.Notes']
data[ , 'Special.Notes'] <- as.character(data[ , 'Special.Notes'])
grep('year', data[ , 'Special.Notes'], value=TRUE)
grep('available', data[ , 'Special.Notes'], value=TRUE)
grep('year', data[ , 'Special.Notes'], value=TRUE)
grep('year', data[ , 'Special.Notes'])
grep('year', names(data))
grep('year', names(data), value = TRUE)
months(data_1[, 14])
class(data_1[, 14])
months(data_1[, 'National.accounts.reference.year'])
data_1[, 'National.accounts.reference.year']
months(data[, 'National.accounts.reference.year'])
grep('year end', data[ , 'Special.Notes'])
grep('fiscal year end', tolower(data[ , 'Special.Notes'])
)
grep('fiscal year end june', tolower(data[ , 'Special.Notes'])
)
grep('june', tolower(data[ , 'Special.Notes'])
)
sum(grep('june', tolower(data[ , 'Special.Notes'])))
count(grep('june', tolower(data[ , 'Special.Notes'])))
length(grep('june', tolower(data[ , 'Special.Notes'])))
run_analysis <- function(){
# Let's load some packages
library(plyr); library(dplyr)
#Getting file on the computer
if(!file.exists('./project.zip')){
link <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file( url = link, destfile = './project.zip', method = 'curl')
unzip('./project.zip', exdir = './' )
}
setwd( './UCI HAR Dataset' )
#Prepare the data into R
data_train <- read.table( 'train/X_train.txt', sep = '')
data_test <- read.table( 'test/X_test.txt', sep = '')
var <- read.table( 'features.txt', sep='')
names(data_train) <- var[ , 2]
names(data_test) <- var[ , 2]
rm(var)
sample <- rep( 'test', length(data_test[ , 1]))
subject <- read.table( 'test/subject_test.txt', sep = '')
activity <- read.table( 'test/y_test.txt', sep = '')
y_value <- cbind(sample, subject )
y_value <- cbind(y_value, activity )
data_test <- cbind(y_value, data_test)
sample <- rep( 'train', length(data_train[ , 1]))
activity <- read.table( 'train/y_train.txt', sep = '')
subject <- read.table( 'train/subject_train.txt', sep = '')
y_value <- cbind(sample, subject )
y_value <- cbind(y_value, activity )
data_train <- cbind(y_value, data_train)
#Merge and create the first dataset
data <- rbind(data_test, data_train)
colnames(data)[2] <- 'subject'
colnames(data)[3] <- 'activity'
#Select mean and standard deviation measurement
column_1 <- c('sample', 'subject', 'activity')
column_2 <- grep( 'mean|std' , names(data), value = TRUE)
column <- append(column_1, column_2 )
data <- data[ , column ]
data[ , 'activity'] <- mapvalues( data[ , 'activity'], from = c('1', '2', '3', '4', '5', '6'), to = c('walking', 'walking_upstairs', 'walking_downstairs', 'sitting', 'standing', 'laying' ) )
names(data) <- gsub( '[()]|-', '', names(data) )
data[ , 'subject'] <- as.numeric(data[ , 'subject'])
data[ , 'activity'] <- as.factor(data[ , 'activity'])
#Caching the first dataset
dataset_1 <<- data
# Create second dataset
N <- unique(data['subject'])
N <- length(N[[1]])
new_data <- vector('list', N)
for( i in 1:N){
subset <- filter(data, subject == i)
subset <- aggregate( subset[,4:82], subset['activity'], mean)
new_data[[i]] <- subset
}
#Caching the second dataset
dataset_2 <<- new_data
#End
setwd( '../' )
}
run_analysis()
View(dataset_1)
setwd('CP1')
# Useful library
library(data.table)
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(gridExtra)
# Get data on the computer
if(!file.exists('data.zip')){
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip', destfile = 'data.zip')
}
if(!file.exists('activity.csv')){
unzip('data.zip')
}
# Get data into R
data <-fread('activity.csv', na.strings = 'NA', sep = ',')
## Prepartion of a raw dataset called 'data'
data <- as.data.frame(data)
data[ , 'date'] <- as.Date(data[ , 'date'], '%Y-%m-%d')
## Prepartion of a clean dataset called 'clean_data'
# Localise date and interval with missing steps values
result_1 <- data[is.na(data[ , 'steps']), ]
result_1 <- select(result_1, c(date, interval))
# Compute the mean of each interval
result_2 <- data[complete.cases(data),]
result_2 <- aggregate(result_2[ , 'steps'], by = list ( interval = result_2[ , 'interval'] ), FUN = mean )
result_2 <- rename( result_2, steps = 'x' )
# Merge the not completed rows with their mean
result <- merge(result_1, result_2, by = 'interval', all = TRUE)
result <- select(result, c(steps, date, interval))
rm(result_1, result_2)
# Add the artificial completed rows to the original data (complete cases only)
result <- rbind(result, data[complete.cases(data),])
result <- result[order(result[,'date']), ]
#cache the result as clean_data
clean_data <- result
rm(result)
# Compute the number of steps by day from the raw dataset
result_1 <- data[complete.cases(data),]
result_1 <- aggregate(result_1[ , 'steps'], by = list ( date = result_1[ , 'date'] ), FUN = sum )
result_1 <- rename(result_1, steps = 'x' )
result_1 <- result_1[rep(row.names(result_1), result_1[ , 'steps'] ), ]
source <- rep('raw data', nrow(result_1) )
result_1 <- cbind(result_1, source)
# Compute the number of steps by day from the clean dataset
result_2 <- clean_data[complete.cases(clean_data),]
result_2 <- aggregate(result_2[ , 'steps'], by = list ( date = result_2[ , 'date'] ), FUN = sum )
result_2 <- rename(result_2, steps = 'x' )
result_2 <- result_2[rep(row.names(result_2), result_2[ , 'steps'] ), ]
source <- rep('clean data', nrow(result_2) )
result_2 <- cbind(result_2, source)
# Prepare all the data for the plotting
result <- rbind(result_1, result_2)
rm(source, result_1, result_2)
plot1_result <- result
# Plot 1
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1)
###
# Compute the centrals tendencies of steps by day from raw dataset
result <- data[complete.cases(data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot2_result <- result
# Plot 2
plot_2 <- ggplot(data = plot2_result) + aes(x = date, y = value)
plot_2 <- plot_2 + ggtitle('Steps by day from raw dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_2 <- plot_2 + geom_line(aes(col = variable))
plot_2 <- plot_2 + scale_x_date(date_minor_breaks = '1 day')
###
# Compute the centrals tendencies of steps by day from clean dataset
result <- clean_data[complete.cases(clean_data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot3_result <- result
# Plot 3
plot_3 <- ggplot(data = plot3_result) + aes(x = date, y = value)
plot_3 <- plot_3 + ggtitle('Steps by day from clean dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_3 <- plot_3 + geom_line(aes(col = variable))
plot_3 <- plot_3 + scale_x_date(date_minor_breaks = '1 day')
###
grid.arrange(plot_1, plot_2, plot_3)
head(plot1_result)
# Compute the number of steps by day from the raw dataset
result_1 <- data[complete.cases(data),]
result_1 <- aggregate(result_1[ , 'steps'], by = list ( date = result_1[ , 'date'] ), FUN = sum )
result_1 <- rename(result_1, steps = 'x' )
result_1 <- result_1[rep(row.names(result_1), result_1[ , 'steps'] ), ]
source <- rep('raw data', nrow(result_1) )
result_1 <- cbind(result_1, source)
# Compute the number of steps by day from the clean dataset
result_2 <- clean_data[complete.cases(clean_data),]
result_2 <- aggregate(result_2[ , 'steps'], by = list ( date = result_2[ , 'date'] ), FUN = sum )
result_2 <- rename(result_2, steps = 'x' )
result_2 <- result_2[rep(row.names(result_2), result_2[ , 'steps'] ), ]
source <- rep('clean data', nrow(result_2) )
result_2 <- cbind(result_2, source)
# Prepare all the data for the plotting
result <- rbind(result_1, result_2)
rm(source, result_1, result_2)
plot1_result <- result
# Plot 1
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1, fill = 'white', alpha = 0.2, position = 'identity')
###
# Compute the centrals tendencies of steps by day from raw dataset
result <- data[complete.cases(data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot2_result <- result
# Plot 2
plot_2 <- ggplot(data = plot2_result) + aes(x = date, y = value)
plot_2 <- plot_2 + ggtitle('Steps by day from raw dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_2 <- plot_2 + geom_line(aes(col = variable))
plot_2 <- plot_2 + scale_x_date(date_minor_breaks = '1 day')
###
# Compute the centrals tendencies of steps by day from clean dataset
result <- clean_data[complete.cases(clean_data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot3_result <- result
# Plot 3
plot_3 <- ggplot(data = plot3_result) + aes(x = date, y = value)
plot_3 <- plot_3 + ggtitle('Steps by day from clean dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_3 <- plot_3 + geom_line(aes(col = variable))
plot_3 <- plot_3 + scale_x_date(date_minor_breaks = '1 day')
###
grid.arrange(plot_1, plot_2, plot_3)
# Compute the number of steps by day from the raw dataset
result_1 <- data[complete.cases(data),]
result_1 <- aggregate(result_1[ , 'steps'], by = list ( date = result_1[ , 'date'] ), FUN = sum )
result_1 <- rename(result_1, steps = 'x' )
result_1 <- result_1[rep(row.names(result_1), result_1[ , 'steps'] ), ]
source <- rep('raw data', nrow(result_1) )
result_1 <- cbind(result_1, source)
# Compute the number of steps by day from the clean dataset
result_2 <- clean_data[complete.cases(clean_data),]
result_2 <- aggregate(result_2[ , 'steps'], by = list ( date = result_2[ , 'date'] ), FUN = sum )
result_2 <- rename(result_2, steps = 'x' )
result_2 <- result_2[rep(row.names(result_2), result_2[ , 'steps'] ), ]
source <- rep('clean data', nrow(result_2) )
result_2 <- cbind(result_2, source)
# Prepare all the data for the plotting
result <- rbind(result_1, result_2)
rm(source, result_1, result_2)
plot1_result <- result
# Plot 1
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1, fill = 'white', alpha = 0.2)
###
# Compute the centrals tendencies of steps by day from raw dataset
result <- data[complete.cases(data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot2_result <- result
# Plot 2
plot_2 <- ggplot(data = plot2_result) + aes(x = date, y = value)
plot_2 <- plot_2 + ggtitle('Steps by day from raw dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_2 <- plot_2 + geom_line(aes(col = variable))
plot_2 <- plot_2 + scale_x_date(date_minor_breaks = '1 day')
###
# Compute the centrals tendencies of steps by day from clean dataset
result <- clean_data[complete.cases(clean_data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot3_result <- result
# Plot 3
plot_3 <- ggplot(data = plot3_result) + aes(x = date, y = value)
plot_3 <- plot_3 + ggtitle('Steps by day from clean dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_3 <- plot_3 + geom_line(aes(col = variable))
plot_3 <- plot_3 + scale_x_date(date_minor_breaks = '1 day')
###
grid.arrange(plot_1, plot_2, plot_3)
# Compute the number of steps by day from the raw dataset
result_1 <- data[complete.cases(data),]
result_1 <- aggregate(result_1[ , 'steps'], by = list ( date = result_1[ , 'date'] ), FUN = sum )
result_1 <- rename(result_1, steps = 'x' )
result_1 <- result_1[rep(row.names(result_1), result_1[ , 'steps'] ), ]
source <- rep('raw data', nrow(result_1) )
result_1 <- cbind(result_1, source)
# Compute the number of steps by day from the clean dataset
result_2 <- clean_data[complete.cases(clean_data),]
result_2 <- aggregate(result_2[ , 'steps'], by = list ( date = result_2[ , 'date'] ), FUN = sum )
result_2 <- rename(result_2, steps = 'x' )
result_2 <- result_2[rep(row.names(result_2), result_2[ , 'steps'] ), ]
source <- rep('clean data', nrow(result_2) )
result_2 <- cbind(result_2, source)
# Prepare all the data for the plotting
result <- rbind(result_1, result_2)
rm(source, result_1, result_2)
plot1_result <- result
# Plot 1
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1, alpha = 0.2)
###
# Compute the centrals tendencies of steps by day from raw dataset
result <- data[complete.cases(data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot2_result <- result
# Plot 2
plot_2 <- ggplot(data = plot2_result) + aes(x = date, y = value)
plot_2 <- plot_2 + ggtitle('Steps by day from raw dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_2 <- plot_2 + geom_line(aes(col = variable))
plot_2 <- plot_2 + scale_x_date(date_minor_breaks = '1 day')
###
# Compute the centrals tendencies of steps by day from clean dataset
result <- clean_data[complete.cases(clean_data),]
result_1 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = mean )
result_1 <- rename( result_1, mean = 'x' )
result_2 <- aggregate(result[ , 'steps'], by = list ( date = result[ , 'date'] ), FUN = median )
result_2 <- rename( result_2, median = 'x' )
result <- merge(result_1, result_2, by = 'date')
result <- melt(result, id.vars = 'date')
rm(result_1, result_2)
plot3_result <- result
# Plot 3
plot_3 <- ggplot(data = plot3_result) + aes(x = date, y = value)
plot_3 <- plot_3 + ggtitle('Steps by day from clean dataset') + theme(plot.title = element_text(hjust =  0.5))
plot_3 <- plot_3 + geom_line(aes(col = variable))
plot_3 <- plot_3 + scale_x_date(date_minor_breaks = '1 day')
###
grid.arrange(plot_1, plot_2, plot_3)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1, alpha = 0.2)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot + geom_histogram(binwidth = 1, alpha = 0.5)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot_1 + geom_histogram(binwidth = 1, alpha = 0.2)
print(plot_1)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot_1 + geom_histogram(binwidth = 1, alpha = 0.5)
print(plot_1)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot_1 + geom_histogram(binwidth = 1, alpha = 0.5, fill = 'white')
print(plot_1)
plot_1 <- ggplot(data = plot1_result) + aes(date, color = source)
plot_1 <- plot_1 + ggtitle('Total steps by day densities') + theme(plot.title = element_text(hjust =  0.5))
plot_1 <- plot_1 + geom_histogram(fill = 'white', binwidth = 1, alpha = 0.5)
print(plot_1)
knit_with_parameters('~/CP1/𝙿𝙰𝟷_𝚝𝚎𝚖𝚙𝚕𝚊𝚝𝚎.Rmd')
